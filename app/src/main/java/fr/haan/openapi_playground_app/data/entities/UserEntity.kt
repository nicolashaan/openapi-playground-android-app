/**
 * Twitter API v2
 *
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: 2.42
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package fr.haan.openapi_playground_app.data.entities

import fr.haan.openapi_playground_app.data.entities.UserEntitiesEntity
import fr.haan.openapi_playground_app.data.entities.UserPublicMetricsEntity
import fr.haan.openapi_playground_app.data.entities.UserWithheldEntity

import kotlinx.serialization.Serializable
import kotlinx.serialization.SerialName
import kotlinx.serialization.Contextual

/**
 * The Twitter User object
 *
 * @param id Unique identifier of this User. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.
 * @param name The friendly name of this user, as shown on their profile.
 * @param username The Twitter handle (screen name) of this user.
 * @param createdAt Creation time of this user.
 * @param `protected` Indicates if this user has chosen to protect their Tweets (in other words, if this user's Tweets are private).
 * @param verified Indicate if this user is a verified Twitter User.
 * @param withheld 
 * @param profileImageUrl The URL to the profile image for this user.
 * @param location The location specified in the user's profile, if the user provided one. As this is a freeform value, it may not indicate a valid location, but it may be fuzzily evaluated when performing searches with location queries.
 * @param url The URL specified in the user's profile.
 * @param description The text of this user's profile description (also known as bio), if the user provided one.
 * @param entities 
 * @param pinnedTweetId Unique identifier of this Tweet. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.
 * @param publicMetrics 
 */
@Serializable
data class UserEntity (

    /* Unique identifier of this User. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers. */
    @SerialName(value = "id")
    val id: kotlin.String,

    /* The friendly name of this user, as shown on their profile. */
    @SerialName(value = "name")
    val name: kotlin.String,

    /* The Twitter handle (screen name) of this user. */
    @SerialName(value = "username")
    val username: kotlin.String,

    /* Creation time of this user. */
    @Contextual @SerialName(value = "created_at")
    val createdAt: java.time.OffsetDateTime? = null,

    /* Indicates if this user has chosen to protect their Tweets (in other words, if this user's Tweets are private). */
    @SerialName(value = "protected")
    val `protected`: kotlin.Boolean? = null,

    /* Indicate if this user is a verified Twitter User. */
    @SerialName(value = "verified")
    val verified: kotlin.Boolean? = null,

    @SerialName(value = "withheld")
    val withheld: UserWithheldEntity? = null,

    /* The URL to the profile image for this user. */
    @Contextual @SerialName(value = "profile_image_url")
    val profileImageUrl: java.net.URI? = null,

    /* The location specified in the user's profile, if the user provided one. As this is a freeform value, it may not indicate a valid location, but it may be fuzzily evaluated when performing searches with location queries. */
    @SerialName(value = "location")
    val location: kotlin.String? = null,

    /* The URL specified in the user's profile. */
    @SerialName(value = "url")
    val url: kotlin.String? = null,

    /* The text of this user's profile description (also known as bio), if the user provided one. */
    @SerialName(value = "description")
    val description: kotlin.String? = null,

    @SerialName(value = "entities")
    val entities: UserEntitiesEntity? = null,

    /* Unique identifier of this Tweet. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers. */
    @SerialName(value = "pinned_tweet_id")
    val pinnedTweetId: kotlin.String? = null,

    @SerialName(value = "public_metrics")
    val publicMetrics: UserPublicMetricsEntity? = null

)

